#! /bin/sh

# Define some variables
. $HOME/.cache/wal/colors.sh
. ~/.config/wm_vars.sh

# Kill all running applications before starting
# Don't kill them, I need them to stay there for the other X instances
# killall -9 sxhkd polybar

# killall -9 sxhkd 

bspc monitor -d I II III IV V VI VII VIII IX X

bspc config border_width         $border_width
bspc config window_gap           $window_gap

bspc config normal_border_color  "${color8}"
bspc config focused_border_color "${foreground}"

bspc config split_ratio          0.50
bspc config borderless_monocle   false
bspc config gapless_monocle      false

# move floating windows with mouse 
bspc config pointer_modifier mod3
bspc config pointer_action1 move
bspc config pointer_action2 resize_corner

### The program name is determined by WM_CLASS which can be found with `xprop | grep WM_CLASS`
# bspc rule -a Gimp desktop='^8' state=floating follow=on
# bspc rule -a Chromium desktop='^2'
# bspc rule -a mplayer2 state=floating
# bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey		manage=off
bspc rule -a Zathura		state=tiled
bspc rule -a chatty-Chatty	state=floating
bspc rule -a TopLevelShell	state=floating
bspc rule -a FLTK			state=floating
bspc rule -a Gschem			state=floating
bspc rule -a Firefox-esr	state=floating

DISPLAY=$DISPLAY sxhkd &

### Set polybar config
sed -i \
	-Ee 's/^(width = .*:).*/\1'`expr $window_gap \* -2`'/' \
    -Ee 's:^(offset-[xy] = ).*:\1'$window_gap':' \
    -Ee 's:^(height = ).*:\1'$bar_height':' \
    -Ee 's:^(border-size = ).*:\1'$border_width':' $HOME/.config/polybar/config
if [ ! `ps e | grep -P "\d:\d\d polybar" | grep -Po " DISPLAY=${DISPLAY}* "``ps aux | grep polybar | grep -v grep | awk '{ print $2 }'` ]; then 
	echo Starting polybar
	polybar -r example &
fi
for polybar_pid in $(xdo id -p $(pgrep polybar | tail -n 1)); do
	# TODO: some sort of notification
	xdo above -t $polybar_pid $(xdo id -n root)
done

